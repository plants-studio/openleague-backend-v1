{
  "openapi": "3.0.3",
  "info": {
    "title": "Open League",
    "description": "KDMHS Creative IT Contest submission backend server",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "https://open-league-back.herokuapp.com/api/v1"
    },
    {
      "url": "http://localhost:4000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Authorization methods"
    },
    {
      "name": "friend",
      "description": "Friend manage methods"
    },
    {
      "name": "league",
      "description": "League manage methods"
    }
  ],
  "paths": {
    "/auth/discord": {
      "post": {
        "tags": ["auth"],
        "summary": "Login with discord",
        "description": "Login using the discord OAuth2 API",
        "requestBody": {
          "description": "Discord OAuth2",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "discord": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      }
    },
    "/auth/revoke": {
      "post": {
        "tags": ["auth"],
        "summary": "Token invalidation",
        "description": "Excluded token from whitelist",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": ["auth"],
        "summary": "Authenticate user to issue accessToken and refreshToken",
        "description": "Receive e-mail and password, issue accessToken and refreshToken",
        "requestBody": {
          "description": "Payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string"
                        },
                        "refreshToken": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": ["auth"],
        "summary": "Create a new account",
        "description": "Create a new account by receiving your name, email, and password",
        "requestBody": {
          "description": "User data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict"
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      }
    },
    "/auth/token": {
      "post": {
        "tags": ["auth"],
        "summary": "Refresh accessToken and refreshToken using refreshToken",
        "description": "Deactivate the received refreshToken and refresh a new accessToken and refreshToken",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string"
                        },
                        "refreshToken": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/friend/{name}": {
      "put": {
        "tags": ["friend"],
        "summary": "Send friend request or accept",
        "description": "To send or accept a friend addition request by name",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User name"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      }
    },
    "/friend": {
      "get": {
        "tags": ["friend"],
        "summary": "Get a list of friends",
        "description": "Get a list of friends",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "friend": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/friend/{id}": {
      "delete": {
        "tags": ["friend"],
        "summary": "Delete friend",
        "description": "Delete a friend from the friend list",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User object id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found"
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      }
    },
    "/league": {
      "post": {
        "tags": ["league"],
        "summary": "Create a new league",
        "description": "Create a new league by receiving title, content, fee, game category, minimum number of teams, Maximum number of teams, number of members required for the team, reward",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "description": "League data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "fee": {
                    "type": "number"
                  },
                  "game": {
                    "type": "string"
                  },
                  "teamMin": {
                    "type": "number"
                  },
                  "teamMax": {
                    "type": "number"
                  },
                  "teamReqMemCnt": {
                    "type": "number"
                  },
                  "reward": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      },
      "get": {
        "tags": ["league"],
        "summary": "Get the list of leagues",
        "description": "Gets the list of selected games or the entire league",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "Item limit"
          }
        ],
        "requestBody": {
          "description": "Games you want to bring in a league list",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "game": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/League"
                  }
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      }
    },
    "/league/{id}": {
      "put": {
        "tags": ["league"],
        "summary": "Apply to the league",
        "description": "The leader of the team applies to join the league",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "League object id"
          }
        ],
        "requestBody": {
          "description": "Team object id",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "teamId": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      },
      "delete": {
        "tags": ["league"],
        "summary": "Delete the League",
        "description": "Delete a league with the Object ID of the league",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "League object id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Comment": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "object",
            "properties": {
              "writer": {
                "type": "string"
              },
              "content": {
                "type": "string"
              }
            }
          },
          "timestamp": {
            "type": "string"
          }
        }
      },
      "Friend": {
        "type": "object",
        "properties": {
          "friends": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "applying": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "waiting": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "League": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "fee": {
            "type": "number"
          },
          "host": {
            "type": "string"
          },
          "game": {
            "type": "string"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "teamMin": {
            "type": "number"
          },
          "teamMax": {
            "type": "number"
          },
          "teamReqMemCnt": {
            "type": "number"
          },
          "reward": {
            "type": "string"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "writer": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "comment": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timestamp": {
            "type": "string"
          }
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "introduce": {
            "type": "string"
          },
          "leader": {
            "type": "string"
          },
          "member": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isPublic": {
            "type": "boolean"
          },
          "waiting": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "discord": {
            "type": "string"
          },
          "friend": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          }
        }
      },
      "Whitelist": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}
